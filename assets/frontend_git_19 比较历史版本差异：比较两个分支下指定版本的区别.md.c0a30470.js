import{_ as e,o as a,c as s,U as i}from"./chunks/framework.76b79cb5.js";const n="/assets/5e9d441a0001ce9c13920734.558386c8.png",t="/assets/5e9d44220001394413500496.698e3f6b.png",d="/assets/5e9d442c000161f715460598.4cd9c656.png",l="/assets/5e9d4436000190bb13500156.cd3832a8.png",c="/assets/5e9d443f0001d59912940326.9d8365d9.png",p="/assets/5e9d44460001144c12800224.66f4aa15.png",o="/assets/5e9d444d00018f7a13080360.2b0b741b.png",r="/assets/5e9d4455000138d713640564.b2078732.png",m="/assets/5e9d445d0001618213640190.78777dc4.png",u="/assets/5e9d44640001ddcb13220394.b0b43a8f.png",b="/assets/5e9d446b0001272b12380224.d5210ab9.png",h="/assets/5e9d44770001662314340360.716e5656.png",g="/assets/5e9d447d0001913814340530.f4989635.png",f="/assets/5e9d44830001eac914340632.8b3fc2ac.png",T=JSON.parse('{"title":"19 比较历史版本差异：比较两个分支下指定版本的区别","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/git/19 比较历史版本差异：比较两个分支下指定版本的区别.md","filePath":"frontend/git/19 比较历史版本差异：比较两个分支下指定版本的区别.md"}'),_={name:"frontend/git/19 比较历史版本差异：比较两个分支下指定版本的区别.md"},v=i('<h1 id="_19-比较历史版本差异-比较两个分支下指定版本的区别" tabindex="-1">19 比较历史版本差异：比较两个分支下指定版本的区别 <a class="header-anchor" href="#_19-比较历史版本差异-比较两个分支下指定版本的区别" aria-label="Permalink to &quot;19 比较历史版本差异：比较两个分支下指定版本的区别&quot;">​</a></h1><p>在前面的章节中，我们学习了对比分支间的差异，包括文件差异，代码差异等。</p><p>在这一节中重点讲解通过 <code>git diff</code> 命令的使用，包括了同分支不同版本的差异、不同分支不同版本的差异两部分。</p><h2 id="_19-1-同分支不同版本差异" tabindex="-1">19.1 同分支不同版本差异 <a class="header-anchor" href="#_19-1-同分支不同版本差异" aria-label="Permalink to &quot;19.1 同分支不同版本差异&quot;">​</a></h2><p>有时候，我们需要查看当前分支的最新版本或工作区和两天前的某一个版本有什么区别，此时便是在同一个分支进行对比，两种对比的方法略有不同。</p><h3 id="_19-1-1-工作区与历史版本" tabindex="-1">19.1.1 工作区与历史版本 <a class="header-anchor" href="#_19-1-1-工作区与历史版本" aria-label="Permalink to &quot;19.1.1 工作区与历史版本&quot;">​</a></h3><p>我们先来学习一下如何使用工作区和历史版本进行对比，首先我们需要通过 <code>git log</code> 命令查看历史记录，然后找到需要对比的 <code>commitid</code>，参考命令如下：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git log</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令执行之后，返回的版本记录如下图所示： <img src="'+n+'" alt="图片描述"> 在上图中，我们可以通过版本的注释和相应的日期找到对应的版本的 commitid，将它复制下来，接着就可以使用 <code>git diff</code> 命令对比代码差异，参考命令如下：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#A6ACCD;">git diff 6d8feb147973711d08211f953f3d7c463ee1e88f</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在这条命令中，第三个参数便是要对比的版本的 <code>commitid</code>，如果不填默认值是当前分支的最后一个版本 <code>commitid</code>，如果 <code>commitid</code> 是当前的工作区与此版本进行对比，命令执行完毕之后，返回的结果如下图所示： <img src="'+t+'" alt="图片描述"> 在图中可以看出当前的工作区与指定的版本相比，<code>index.php</code> 文件中少了一行。</p><h3 id="_19-1-2-两个历史版本对比" tabindex="-1">19.1.2 两个历史版本对比 <a class="header-anchor" href="#_19-1-2-两个历史版本对比" aria-label="Permalink to &quot;19.1.2 两个历史版本对比&quot;">​</a></h3><p>有些时候我们除了拿当前的工作区与某一个版本进行对比，还会有两个版本间的对比需求，此时我们则在 <code>git diff</code> 命令中传递两个版本号即可，参考命令如下：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#A6ACCD;">git diff 4c64ecd48d7ac2b32b35ece080a5ae1f7256f9d9 6d8feb147973711d08211f953f3d7c463ee1e88f</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令执行之后，会把命令中最后一个参数的版本与前面一个参数的版本进行对比，返回的结果如下图所示： <img src="'+d+'" alt="图片描述"> 在图中可以看到有多个文件发生过变更，绿色部分为增加的代码部分。</p><h2 id="_19-2-跨分支比较差异" tabindex="-1">19.2 跨分支比较差异 <a class="header-anchor" href="#_19-2-跨分支比较差异" aria-label="Permalink to &quot;19.2 跨分支比较差异&quot;">​</a></h2><p>在一些少数情况下我们还会跨分支比较代码差异，下面我们来构造实验环境，然后跨分支对比版本差异；</p><h3 id="_19-2-1-实验环境准备" tabindex="-1">19.2.1 实验环境准备 <a class="header-anchor" href="#_19-2-1-实验环境准备" aria-label="Permalink to &quot;19.2.1 实验环境准备&quot;">​</a></h3><p>首先我们需要新建一个一模一样分支，参考命令如下：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#A6ACCD;">git checkout -b difftest</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在执行的命令中，参数 <code>-b</code> 的作用为新建分支，参数 <code>difftest</code> 则是需要创建的分支名，命令执行后，返回的结果如下图所示： <img src="'+l+'" alt="图片描述"> 在图中可以看到已经新建分支成功，并自动切换到了 <code>difftest</code> 中，接着我们再修改代码并查看修改状态，参考命令如下</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#A6ACCD;">echo &#39;diff测试&#39; &gt; diff.php  &amp;&amp; git status</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令执行后，返回的结果如下图所示： <img src="'+c+'" alt="图片描述"> 在图中可以看到文件<code>diff.php</code>已经被修改，接着我们将修改的内容提交到版本控制器中，参考命令如下图所示：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git add . &amp;&amp; git commit . -m &#39;新增加一个文件&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令执行完毕之后，返回的信息如下图所示： <img src="'+p+'" alt="图片描述"> 在图中可以看到 Git 提示有一个文件被修改，增加了一行代码，说明已经提交成功。</p><h3 id="_19-2-2-不同分支不同版本比较" tabindex="-1">19.2.2 不同分支不同版本比较 <a class="header-anchor" href="#_19-2-2-不同分支不同版本比较" aria-label="Permalink to &quot;19.2.2 不同分支不同版本比较&quot;">​</a></h3><p>接着我们将此分支与其他分支最新版本进行比较，参考命令如下：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#A6ACCD;">git diff master</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在命令中最后一个参数<code>master</code>代表的是分支名，Git 会自动获取该分支下最后一个版本的 <code>commit</code>，命令执行之后返回的信息如下图所示： <img src="'+o+'" alt="图片描述"> 在图中可以看到当前分支的最后一个版本与 master 分支的差异提示，此时我们是将两个分支的最新版本进行对比。</p><p>但有些时候我们可能还会将两个分支的历史版本进行对比。接下来我们来尝试一下，首先使用 <code>git log</code> 查看当前版本的<code>commit</code>，参考命令如下：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git log</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令执行之后，Git 返回的信息如下图所示： <img src="'+r+'" alt="图片描述"> 我们将上图中的一个 <code>commitid</code> 复制下来，接着去执行切换分支操作，参考命令如下：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git checkout master</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令执行之后，返回的信息如下图所示： <img src="'+m+'" alt="图片描述"> 在图中可以看出已经切换到了 master 分支。</p><p>接着我需要在当前分支修改文件，并查看 Git 的工作区状态，参考命令如下：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#A6ACCD;">echo &#39;在master分支中diff测试&#39; &gt; diff.php  &amp;&amp; git status</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令执行之后，返回的信息如下图所示： <img src="'+u+'" alt="图片描述"> 可以看到文件状态为被修改的状态，接下来我将修改的文件提交一个新版本，参考命令如下：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git add . &amp;&amp; git commit . -m &#39;新增加一个文件&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令执行之后，返回的信息如下图所示： <img src="'+b+'" alt="图片描述"> 在上图中可以看到已经成功创建一个文件到 Git 仓库当中，接着我使用当前分支版本对比另外一个分支历史版本，参考命令如下：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#A6ACCD;">git diff e3670cd2a424184d12dd860f471fe5d1c876e0cd</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在上面的参考命令中，<code>commitid</code> 是 <code>difftest</code> 分支的一个历史记录，命令执行之后返回的信息如下图所示： <img src="'+h+'" alt="图片描述"> 在上图中可以看到，已经展示了当前分支最新版本与另外一个分支的历史版本的差异，说明 <code>git diff</code> 命令是可以跨分支进行对比的。</p><h3 id="_19-2-3" tabindex="-1">19.2.3 <a class="header-anchor" href="#_19-2-3" aria-label="Permalink to &quot;19.2.3&quot;">​</a></h3><p>接着我们再做一个实验，用当前分支的历史版本与 <code>difftest</code> 分支的历史版本进行对比，依然通过 <code>git log</code> 命令找一个当前分支历史版本的<code>commitid</code>，参考命令如下：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git log</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令执行之后，可以看到当前分支的版本记录，如下图所示： <img src="'+g+'" alt="图片描述"> 在上图中我们任意选择一个版本的 <code>commitid</code>，然后将它复制下来，接着就可以使用当前分支的历史版本对比另外一个分支历史版本，参考命令如下：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#A6ACCD;">git diff a02b2c7c023ae28c5e1a90209d7172f4c759fa35 e3670cd2a424184d12dd860f471fe5d1c876e0cd</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令执行之后，返回的差异信息如下图所示： <img src="'+f+'" alt="图片描述"> 在图中我们看到已经展示出了差异部分信息，说明可以跨分支比较两个版本信息的。</p><h2 id="_19-3-小结" tabindex="-1">19.3 小结 <a class="header-anchor" href="#_19-3-小结" aria-label="Permalink to &quot;19.3 小结&quot;">​</a></h2><p>在这一章节当中我们主要加强了对<code>git diff</code>的理解，<code>git diff</code>不仅可以比较工作区与最后一个版本的差异，还可以比较两个任意版本的区别，即使两个版本不在一个分支当中；</p><p>在这一节当中我们主要做的实验有下面几个：</p><ol><li>工作区与当前分支历史版本差异；</li><li>当前分支下的两个历史版本差异；</li><li>当前分支最新版本与其他分支最新版本的差异；</li><li>当前分支最新版本与其他分支历史版本差异；</li><li>当前分支历史版本与其他分支历史版本差异。</li></ol>',51),C=[v];function y(A,k,q,D,w,x){return a(),s("div",null,C)}const G=e(_,[["render",y]]);export{T as __pageData,G as default};
