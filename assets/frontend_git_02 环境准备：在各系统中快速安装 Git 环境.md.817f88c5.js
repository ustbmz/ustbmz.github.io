import{_ as t,o as e,c as s,U as o}from"./chunks/framework.76b79cb5.js";const d=JSON.parse('{"title":"02 环境准备：在各系统中快速安装 Git 环境","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/git/02 环境准备：在各系统中快速安装 Git 环境.md","filePath":"frontend/git/02 环境准备：在各系统中快速安装 Git 环境.md"}'),a={name:"frontend/git/02 环境准备：在各系统中快速安装 Git 环境.md"},i=o('<h1 id="_02-环境准备-在各系统中快速安装-git-环境" tabindex="-1">02 环境准备：在各系统中快速安装 Git 环境 <a class="header-anchor" href="#_02-环境准备-在各系统中快速安装-git-环境" aria-label="Permalink to &quot;02 环境准备：在各系统中快速安装 Git 环境&quot;">​</a></h1><p>在学习Git命令操作之前，我们先搭建Git的环境，这一节当中主要会教大家安装Git和一些命令智能提示的工具；Git的安装相对来说非常简单， 并且不少 Linux 系统自带了Git工具；</p><p>如果你的系统当中已经安装了Git，那么可以跳过相应的安装步骤，是否已经安装，可以通过下面安装的验证环节进行验证。大部分读者应该使用的是 Windows 系统，默认是没有安装Git工具的，可以通过下面的方法进行安装。</p><p>2.1 安装 Git Git可以通过图形化界面管理，也可以通过命令行管理，为了让读者能更好地理解Git的操作和使用效率，我们后续的内容都是以命令操作为主的讲解，在后面会单独拿出一小节教大家如何使用图形化管理。</p><ol start="2"><li>1.1 Windows 安装 在 Windows 系统中安装Git非常简单，只需要下载Git的安装包，然后安装引导点击安装即可：</li></ol><p>Git下载地址：<a href="https://git-scm.com/download/win" target="_blank" rel="noreferrer">https://git-scm.com/download/win</a> ,</p><p>下载完安装包之后，双击 EXE 安装包，可以看到如下图窗口界面，一直点击Next安装即可：</p><p>图片描述</p><p>在安装完成之后，会在你的右键菜单栏中增加一个Git的选项，你可以在电脑桌面点击鼠标右键，会看到多出两个菜单，如下图所示：</p><p>2-2</p><p>当你点击Git bash Here菜单之后，可以看到一个终端窗口，在终端里面输入命令git —version，如果可以看到 git 的版本信息，则说明安装成功，如下图所示：</p><p>图片描述</p><p>2.1.2 Mac OS 安装 我平时自己使用 Mac 比较多，不记得 Mac 是否自带了Git；如果你的 Mac 系统当中没有Git工具，那么就安装一下吧。Mac 安装的方法也非常简单，这里推荐大家使用最简单的方法安装，直接下载 pkg 的安装包安装即可：</p><p>Mac版本Git下载地址：<a href="https://git-scm.com/download/mac" target="_blank" rel="noreferrer">https://git-scm.com/download/mac</a></p><p>下载下来之后可以看到一个dmg文件，双击打开dmg压缩文件，可以看到里面有一个pgk文件，如下图所示：</p><p>图片描述</p><p>再次双击 pkg 文件，就可以进行安装，然后按照引导一直点击继续按钮就可以完成安装了，如下图所示：</p><p>图片描述</p><p>安装完成之后，打开终端，在终端当中输入git —version,如果可以看到 Git 的版本号，说明已经成功安装，如下图所示：</p><p>图片描述</p><p>2.1.3 Linux 安装 Linux 其实通常默认已经自带了Git，但考虑到少部分精简过的系统没有自带Git，这里也简单提及一下安装方法；Linux 通常有多个发行版本，安装方式略有不同，不过都非常的简单，只需要一条命令即可安装完成，这里以常见的Ubuntu和Cent os为例。</p><p>ubuntu 系统的安装命令如下:</p><p>apt install git Centos 系统安装命令如下：</p><p>yum -y install git 安装完成之后，打开终端，在终端当中输入git —version,如果可以看到 Git 的版本号，说明已经成功安装：</p><p>➜ ~ git --version git version 2.21.0 2.2 安装 zsh 安装zsh的目的是为了接下来安装oh-my-zsh，因为oh-my-zsh是基于zsh的一个主题；所以在安装oh-my-zsh之前，必须要安装 zsh，至于oh-my-zsh的用处可以先跳到下面的oh-my-zsh小节中查看，选择是否安装，下面我带着大家安装一下zsh。</p><p>在这 2.1 小节当中Git工具的安装已经完成了。本节下面的内容属于附加内容，会提及在 Linux 下和 Mac 的一些辅助工具的安装，在 Windows 默认的终端下无法安装，只限于 Linux 和 Mac 系统安装。</p><p>2.2.1 Mac 安装 zsh 使用 mac 系统的读者相信大部分都安装了homebrew，因此建议直接使用 brew 的方式来安装 zsh，命令如下所示：</p><p>brew install zsh 安装过程中，终端会出现如下信息：</p><p>==&gt; Installing zsh ==&gt; Downloading <a href="https://homebrew.bintray.com/bottles/zsh-5.7.1.mojave.bottle.tar" target="_blank" rel="noreferrer">https://homebrew.bintray.com/bottles/zsh-5.7.1.mojave.bottle.tar</a> ==&gt; Downloading from <a href="https://akamai.bintray.com/79/793d87f67e64a5e01dfdea890af21" target="_blank" rel="noreferrer">https://akamai.bintray.com/79/793d87f67e64a5e01dfdea890af21</a> ######################################################################## 100.0% ==&gt; Pouring zsh-5.7.1.mojave.bottle.tar.gz ? /usr/local/Cellar/zsh/5.7.1: 1,515 files, 13.3MB 2.2.1 Linux 安装 zsh Linux 中安装 zsh 同样非常简单，只需要一条命令即可完成安装，考虑到 Linux 多个版本，不同版本的安装方式不同，这里以常用的 Ubuntu 和 centos 为例：</p><p>Ubuntu 安装 zsh 命令：</p><p>apt install zsh centos 安装 zsh 命令：</p><p>yum install zsh 下面我以 Ubuntu 为例，执行安装命令之后可以看到返回如下信息：</p><p>图片描述</p><p>2.3 安装oh-my-zsh 安装 oh-my-zsh 的目的是为了让大家可以更快速的学习Git的命令行操作，它能够给我们在输入一些Git命令时候提供很大的方便。</p><p>2.3.1 安装oh-my-zsh 因为 oh-my-zsh 是基于 zsh，它的安装方式和系统本身有关联关系，因此统一的安装命令如下：</p><p>sh -c &quot;$(curl -fsSL <a href="https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh" target="_blank" rel="noreferrer">https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh</a>)&quot; 执行安装命令完成之后，可以看到终端如下信息：</p><pre><code>     __                                     __\n</code></pre><p>____ / /_ ____ ___ __ __ ____ <em><em><strong><em>/ /</em> / __ / __ \\ / __ `</strong> / / / / /</em> / / <em><em><em>/ __ <br> / /</em>/ / / / / / / / / / / /</em>/ / / /</em>(</em>_ ) / / / _<em><em><em>/</em>/ /</em>/ /</em>/ /<em>/ /</em>/_<em>, / /</em><strong>/</strong><em><em>/</em>/ /</em>/ /____/ ....is now installed!</p><p>Please look over the ~/.zshrc file to select plugins, themes, and options. p.s. Follow us on <a href="https://twitter.com/ohmyzsh" target="_blank" rel="noreferrer">https://twitter.com/ohmyzsh</a> p.p.s. Get stickers, shirts, and coffee mugs at <a href="https://shop.planetargon.com/collections/oh-my-zsh" target="_blank" rel="noreferrer">https://shop.planetargon.com/collections/oh-my-zsh</a> ➜ ~ 2.3.2 测试验证 安装成功之后，会看到终端发现明显的变化，当你输入命令的一部分再按下 tab 键时，它会给你一些相应的提示或者自动补全，比如当你输入：</p><p>git st 再按下 tab 键，在终端会看到如下效果：</p><p>➜ ~ git st stash -- stash away changes to dirty working directory status -- show working-tree status stripspace -- filter out empty lines 除了自动补全和命令提示外，还可以给你纠错，比如当你输入命令：</p><p>git statsu 它会告诉你 git 没有这个命令，并提示你相对应正确的命令，如下所示：</p><p>➜ ~ git statsu git: &#39;statsu&#39; is not a git command. See &#39;git --help&#39;.</p><p>The most similar command is status 2.4 本章小结 在这一节当中主要讲解了Git和辅助工具oh-my-zsh的安装与验证方法：</p><p>Git的安装非常简单，去官网下载对应系统的安装包按照引导安装即可； 安装oh-my-zsh的目的是为了让在终端当中有智能提示； oh-my-zsh是基于zsh的一个主题，安装之前必须先安装zsh。</p>',45),r=[i];function p(n,h,m,_,l,c){return e(),s("div",null,r)}const u=t(a,[["render",p]]);export{d as __pageData,u as default};
