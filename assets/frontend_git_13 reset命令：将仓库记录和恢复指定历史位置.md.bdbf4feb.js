import{_ as e,o as s,c as a,U as t}from"./chunks/framework.76b79cb5.js";const n="/assets/5e9d3d2e0001d01c10140190.0dcf5f17.png",i="/assets/5e9d3d340001a4cf12660462.d30148fd.png",c="/assets/5e9d3d39000102e710560190.d9750a00.png",o="/assets/5e9d3d400001f1a611960496.bb83d7f5.png",p="/assets/5e9d3d460001119109720258.563fcbd5.png",l="/assets/5e9d3d4d00011c4f12800496.613034b5.png",d="/assets/5e9d3d5b00017c2410000190.1d91482c.png",r="/assets/5e9d3d620001d78012100496.e91a6e46.png",m="/assets/5e9d3d680001c30710560190.a072eed9.png",g="/assets/5e9d3d7100013e0a12380632.ff6567e6.png",u="/assets/5e9d3eb00001e55212520496.3f67eb4c.png",h="/assets/5e9d3eba0001b14112520462.a1ebd2ac.png",b="/assets/5e9d3ec300017a8013360190.cdee958a.png",_="/assets/5e9d3ecb0001f87812380462.4fa8fd8e.png",v="/assets/5e9d3ed30001de1612380292.19403f84.png",T=JSON.parse('{"title":"13 reset命令：将仓库记录和恢复指定历史位置","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/git/13 reset命令：将仓库记录和恢复指定历史位置.md","filePath":"frontend/git/13 reset命令：将仓库记录和恢复指定历史位置.md"}'),C={name:"frontend/git/13 reset命令：将仓库记录和恢复指定历史位置.md"},y=t('<h1 id="_13-reset命令-将仓库记录和恢复指定历史位置" tabindex="-1">13 reset命令：将仓库记录和恢复指定历史位置 <a class="header-anchor" href="#_13-reset命令-将仓库记录和恢复指定历史位置" aria-label="Permalink to &quot;13 reset命令：将仓库记录和恢复指定历史位置&quot;">​</a></h1><p>有时候我们用 <code>git commit</code> 提交代码后发现这一次提交的内容是错误的，需要将代码复原，这个时候常见有两种做法。</p><p>第一种是把代码错误内容修改正确，然后重新使用 commit 提交一次；第二种方法是使用 <code>git reset</code> 命令撤销上一次错误的 commit 记录。</p><h2 id="_13-1-覆盖代码" tabindex="-1">13.1 覆盖代码 <a class="header-anchor" href="#_13-1-覆盖代码" aria-label="Permalink to &quot;13.1 覆盖代码&quot;">​</a></h2><p>我们先来使用第一种比较原始的方法，会多一次 commit 记录，我们先使用 ls 命令查看当前仓库的文件，如下图所示 <img src="'+n+'" alt="图片描述"></p><p>在图中可以看到有一个 <code>index.php</code> 文件，我们随意添加一些错误代码到文件当中去，并查看 git 的修改状态，参考命令如下所示：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">echo 123123  &gt;&gt; index.php  &amp;&amp; git status</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令执行后，Git 返回的提示信息如下图： <img src="'+i+'" alt="图片描述"> 在图中可以看到 index.php 文件已经被修改，接着我们将修改的文件通过 commit 提交到系统当中去，参考命令如下：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git commit . -m &#39;新增代码 v2&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令执行完毕后，返回信息如下图所示： <img src="'+c+'" alt="图片描述"> 在图中可以看到有一个文件被更改，增加了一行代码，接着我们通过 <code>git log</code> 去查看版本记录，命令执行后返回结果如下图所示：</p><p><img src="'+o+'" alt="图片描述"> 在图中，可以看到刚才的 commit 提交记录已经提交成功；就在这个时候我意识到，我刚才提交的代码有问题，需要撤销刚才的错误代码，于是我使用 <code>vim</code> 重新去修改文件，参考命令如下：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">vim index.php</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>使用 vim 编辑 <code>index.php</code> 后，可以看到刚才新增的代码： <img src="'+p+'" alt="图片描述"> 接着我将刚才新增的代码给删除，并重新使用 commit 提交代码，参考命令如下：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git commit . -m &#39;新增代码 v2&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令执行之后，返回信息如下图所示： <img src="'+l+'" alt="图片描述"> 可以看到一个文件被修改，删除了一行代码的提示，至此我们的代码本身已经回滚完成，但是这整个过程是比较繁琐的，并且会多出一些没有意义的 commit 记录。</p><p>我们可以使用 <code>git log</code> 来查看记录，如下图所示： <img src="'+d+'" alt="图片描述"></p><p>在图中我们看到刚才两条 commit 记录，但其实这两天记录是没有意义的，因为单纯让代码恢复到正确版本完全可以使用reset 操作。</p><h2 id="_13-2-覆盖记录" tabindex="-1">13.2 覆盖记录 <a class="header-anchor" href="#_13-2-覆盖记录" aria-label="Permalink to &quot;13.2 覆盖记录&quot;">​</a></h2><p>接下来我们再使用 <code>reset</code> 命令同样来操作一次，看看有什么不同，我们同样去改一下文件，然后查看一下 git 的状态，参考命令如下：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">echo &#39;reset&#39;  &gt;&gt; index.php  &amp;&amp; git status</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令执行之后，返回的信息如下图所示： <img src="'+r+'" alt="图片描述"> 在图中可以可以看到文件已经被修改，接着我们使用<code>git coomit</code>命令提交代码，参考命令如下：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git commit . -m &#39;git reset测试&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令执行完毕之后，返回信息如下图所示： <img src="'+m+'" alt="图片描述"> 在图中可以看到一个文件被修改，新增了一行代码，至此我们要构造的环境已经成功。</p><p>现在我们需要将刚才的提交给撤销掉，可以用到 <code>git reset</code> 操作，但在操作之前，我们先找到刚才的 <code>commitid</code> 也就是哈希值，可以使用 <code>git log</code> 命令查看到，参考命令如下：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git log</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令执行之后，返回的版本记录如下图所示： <img src="'+g+'" alt="图片描述"> 在图中可以看到刚才通过 <code>git commit</code> 命令提交的记录已经在图中显示，我们大致记住确认一下。</p><h3 id="_13-2-1-head-撤销" tabindex="-1">13.2.1 HEAD^ 撤销 <a class="header-anchor" href="#_13-2-1-head-撤销" aria-label="Permalink to &quot;13.2.1 HEAD^ 撤销&quot;">​</a></h3><p>接着我们在学习一个新的命令，这个命令可以撤销我们最近一次提交，参考命令如下：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git reset HEAD^</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令执行完毕之后，返回的信息如下图所示：</p><p>在图中可以看到提示 index.php 已经受到了 <code>git reset</code> 命令的影响，接着我们使用 <code>git status</code> 查看当前仓库状态，参考命令如下：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git status</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令执行之后，返回的信息如下图所示： <img src="'+u+'" alt="图片描述"> 在图中可以看到 <code>index.php</code> 文件处于被修改且为工作区状态，接着我们通过 <code>git log</code> 来确认之前的提交记录还是否存在，参考命令：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git log</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令执行之后，返回的 commit 记录如下图所示： <img src="'+h+'" alt="图片描述"> 在图中可以看到提交的记录也被撤销了。</p><h3 id="_13-2-1-指定回滚位置" tabindex="-1">13.2.1 指定回滚位置 <a class="header-anchor" href="#_13-2-1-指定回滚位置" aria-label="Permalink to &quot;13.2.1 指定回滚位置&quot;">​</a></h3><p>除了上面使用 <code>git reset HEAD^</code> 方式，还可以撤销到指定位置，在操作之前我们需要先通过查看 <code>commit</code> 记录的方式找到 <code>commitid</code>，我们将需要恢复到的版本 <code>commit</code>，将它复制下来，接着使用 <code>git reset</code> 命令将其回滚到此位置，参考命令如下所示：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git reset 815ac616803fa89c75467618b2be44f85696543d</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令执行完成之后，返回的信息如下图所示： <img src="'+b+'" alt="图片描述"> 在图中同样可以看到 <code>index.php</code> 受到了影响，接着我们用 <code>git log</code> 去验证一下，参考命令如下</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git log</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>执行命令之后，返回的 <code>commit</code> 记录如下图所示： <img src="'+_+'" alt="图片描述"> 在图中我们看到之前的 <code>commit</code> 记录已经不见了，说明我们使用 <code>git reset</code> 是有效果的，到目前为止虽然 <code>commit</code> 记录已经撤销。</p><p>但是代码其实仍然是没有变化的，我们这里可以使用 <code>git checkout</code> 文件名来撤销文件修改，撤销修改后再通过 <code>git status</code> 去确认当前状态，参考命令如下</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">git checkout index.php  &amp;&amp; git status</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令执行完毕之后，返回的仓库状态信息如下图所示： <img src="'+v+'" alt="图片描述"> 在图中我们看到此时仓库中也没有提示有文件被修改过，完美的实现了撤销错误的 <code>commit</code> 提交。</p><h2 id="_13-3-小结" tabindex="-1">13.3 小结 <a class="header-anchor" href="#_13-3-小结" aria-label="Permalink to &quot;13.3 小结&quot;">​</a></h2><p>在这一节当中主要讲了将仓库代码回滚的两种方式，着重学习了<code>git reset</code>命令，这个命令可以撤销 <code>commit</code> 记录；提到两种 <code>reset</code> 的使用方法：</p><ol><li><code>git reset HEAD^</code> 撤销最近一次的<code>commit</code> 记录</li><li><code>git reset commitld</code> 将<code>commit</code>之后的记录全部撤销</li></ol>',47),f=[y];function A(k,D,x,w,q,P){return s(),a("div",null,f)}const H=e(C,[["render",A]]);export{T as __pageData,H as default};
