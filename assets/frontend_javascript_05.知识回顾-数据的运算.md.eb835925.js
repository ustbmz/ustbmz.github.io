import{_ as s,o as a,c as n,U as l}from"./chunks/framework.76b79cb5.js";const F=JSON.parse('{"title":"知识回顾-数据的运算","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/javascript/05.知识回顾-数据的运算.md","filePath":"frontend/javascript/05.知识回顾-数据的运算.md"}'),p={name:"frontend/javascript/05.知识回顾-数据的运算.md"},e=l(`<h1 id="知识回顾-数据的运算" tabindex="-1">知识回顾-数据的运算 <a class="header-anchor" href="#知识回顾-数据的运算" aria-label="Permalink to &quot;知识回顾-数据的运算&quot;">​</a></h1><p>[toc]</p><h2 id="运算符" tabindex="-1">运算符 <a class="header-anchor" href="#运算符" aria-label="Permalink to &quot;运算符&quot;">​</a></h2><h3 id="算术-数学-运算" tabindex="-1">算术（数学）运算 <a class="header-anchor" href="#算术-数学-运算" aria-label="Permalink to &quot;算术（数学）运算&quot;">​</a></h3><p>支持：加(+)、减(-)、乘(*)、除(/)、求余(%)</p><p>值得注意的是，+和-可以放到单个数据的前面，表示正负。</p><p>算术运算的表达式一定返回数字，可以利用其特点做类型转换，参考<a href="#类型的隐式转换">类型的隐式转换</a></p><h3 id="字符串拼接" tabindex="-1">字符串拼接 <a class="header-anchor" href="#字符串拼接" aria-label="Permalink to &quot;字符串拼接&quot;">​</a></h3><p>当<code>+</code>的两端有一个是字符串时，不再进行算术运算，而变为字符串拼接</p><p>表达式一定返回string，可以利用其特点做类型转换，参考<a href="#类型的隐式转换">类型的隐式转换</a></p><h3 id="赋值运算" tabindex="-1">赋值运算 <a class="header-anchor" href="#赋值运算" aria-label="Permalink to &quot;赋值运算&quot;">​</a></h3><p>涉及的运算符：<code>=</code> <code>+=</code> <code>*=</code> <code>/=</code> <code>-=</code> <code>%=</code>。</p><p>其中，<code>a += xxx</code>，等效于<code>a = a + (xxx)</code>，其他类似</p><blockquote><p>小贴士 赋值表达式始终返回赋值结果，我们可以利用该特点完成连续赋值</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 将 3 同时赋值给 a、b</span></span>
<span class="line"><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></blockquote><h3 id="比较运算" tabindex="-1">比较运算 <a class="header-anchor" href="#比较运算" aria-label="Permalink to &quot;比较运算&quot;">​</a></h3><p>涉及的运算符：<code>==</code> <code>===</code> <code>!=</code> <code>!==</code> <code>&gt;</code> <code>&gt;=</code> <code>&lt;</code> <code>&lt;=</code></p><blockquote><p>小贴士 在实际开发中，没有任何理由使用<code>==</code>和<code>!=</code>，你可以当做这两个运算符并不存在。 应该始终使用<code>===</code>和<code>!==</code>来比较相等和不相等</p></blockquote><blockquote><p>小贴士 比较运算始终返回boolean，我们可以利用这一点来完成某些赋值</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 啰嗦的代码</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;">(sex </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">男</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isMale</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isMale</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 简洁优雅的代码</span></span>
<span class="line"><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isMale </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> sex </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">男</span><span style="color:#89DDFF;">&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></blockquote><h3 id="逻辑运算" tabindex="-1">逻辑运算 <a class="header-anchor" href="#逻辑运算" aria-label="Permalink to &quot;逻辑运算&quot;">​</a></h3><p>逻辑运算会涉及到<a href="#布尔判定">布尔判定</a></p><p>运算符：<code>!</code></p><p>对后面的数据取反，表达式一定返回boolean。</p><p>可以利用其特点做类型转换，参考<a href="#类型的隐式转换">类型的隐式转换</a></p><p>运算符：<code>&amp;&amp;</code></p><p>并且，真真为真，其他为假，具有短路规则。</p><p>表达式返回<strong>最后一个判定的数据</strong></p><blockquote><p>小贴士 在实际的开发中，我们可以利用短路规则简化代码</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 实现功能，如果exp有值（判定为真），就输出ok</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 啰嗦的代码</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;">(exp)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">exp</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 简洁的代码</span></span>
<span class="line"><span style="color:#A6ACCD;">exp </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(exp)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></blockquote><p>运算符：<code>||</code></p><p>或者，假假为假，其他为真，具有短路规则。</p><p>表达式返回<strong>最后一个判定的数据</strong></p><blockquote><p>小贴士 在实际的开发中，我们可以利用短路规则简化代码</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 实现功能，如果exp有值，就把它的值赋值给n，如果没有值，就给n赋值为默认值 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 啰嗦的代码</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;">(exp)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">exp</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 简洁的代码</span></span>
<span class="line"><span style="color:#A6ACCD;">n </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> exp </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></blockquote><p>运算符：<code>? :</code>，格式<code>a ? b : c</code></p><p>三目运算，判定a，为真时表达式返回b，否则返回c</p><blockquote><p>小贴士 三目运算通常用于替代一些简单的if结构</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 如果exp为真，则把1赋值给n，否则，把2赋值给n</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 啰嗦的代码</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;">(exp)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">n</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 更简洁的代码</span></span>
<span class="line"><span style="color:#A6ACCD;">n </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> exp </span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></blockquote><h2 id="布尔判定" tabindex="-1">布尔判定 <a class="header-anchor" href="#布尔判定" aria-label="Permalink to &quot;布尔判定&quot;">​</a></h2><p>所有需要判断真假的地方都会使用下面的规则</p><table><thead><tr><th>数据</th><th>判定</th></tr></thead><tbody><tr><td><code>false</code> <code>null</code> <code>undefined</code> <code>0</code> <code>NaN</code> <code>&#39;&#39;</code></td><td>false</td></tr><tr><td>剩余所有数据</td><td>true</td></tr></tbody></table><h2 id="类型的隐式转换" tabindex="-1">类型的隐式转换 <a class="header-anchor" href="#类型的隐式转换" aria-label="Permalink to &quot;类型的隐式转换&quot;">​</a></h2><p>每个运算符都有自己期望的数据，比如<code>*</code>期望两端都是数字</p><p>一旦数据不符合运算符的期望，js就会悄悄的对数据进行类型转换，把它转换成期望的值后进行运算。</p><p>值得注意的是，这种转换是 <em>临时</em> 的，并不会对原数据造成影响</p><blockquote><p>小贴士 在实际的开发中，我们可以利用类型的隐式转换完成以下功能：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> n </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 不管a是啥，都会被转换成数字，保存到n中</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> s </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 不管a是啥，都会被转换成字符串，保存到s中</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!!</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 不管a是啥，都会被转换成boolean，保存到b中</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></blockquote>`,42),o=[e];function c(t,r,i,y,D,d){return a(),n("div",null,o)}const C=s(p,[["render",c]]);export{F as __pageData,C as default};
