(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{437:function(t,s,a){"use strict";a.r(s);var n=a(31),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"swift基础语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swift基础语法"}},[t._v("#")]),t._v(" Swift基础语法")]),t._v(" "),a("h2",{attrs:{id:"swift-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swift-命令"}},[t._v("#")]),t._v(" Swift  命令")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 生成语法树")]),t._v("\n$ swiftc -dump-ast main.swift\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 生成最简洁的SIL代码 ")]),t._v("\n$ swiftc -emit-sil main.swift\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 生成LLVM IR代码")]),t._v("\n$ swiftc -emit-ir main.swift -o main.il\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 生成汇编代码")]),t._v("\n$ swiftc -emit-assembly main.swift -o main.s\n")])])]),a("p",[a("strong",[t._v("对汇编代码进行分析，可以真正掌握汇编语言的本质")])]),t._v(" "),a("h2",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let 常量 可以不赋值，只指定类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),t._v("\n\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n 常量只能赋值一次，且要在使用它的时候之前进行赋值\n 不要求在编译时确定,常量值也可以在运行中确定\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n\nnum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nnum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例如 在运行函数中 返回常量值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 但是只能赋值一次！！")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("getAge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"常见数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见数据类型"}},[t._v("#")]),t._v(" 常见数据类型")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/cnmz/images/raw/master/mdpic/image-20220115115259657.png",alt:"image-20220115115259657"}})]),t._v(" "),a("h3",{attrs:{id:"字面量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字面量"}},[t._v("#")]),t._v(" 字面量")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/cnmz/images/raw/master/mdpic/image-20220115115412155.png",alt:"image-20220115115412155"}})]),t._v(" "),a("h3",{attrs:{id:"类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[t._v("#")]),t._v(" 类型转换")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/cnmz/images/raw/master/mdpic/image-20220115001337295.png",alt:"image-20220115001337295"}})]),t._v(" "),a("h3",{attrs:{id:"元祖-tuple"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元祖-tuple"}},[t._v("#")]),t._v(" 元祖 (Tuple)")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/cnmz/images/raw/master/mdpic/image-20220115001730439.png",alt:"image-20220115001730439"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);