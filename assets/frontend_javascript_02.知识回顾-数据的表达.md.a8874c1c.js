import{_ as t,o as e,c as a,U as o}from"./chunks/framework.76b79cb5.js";const m=JSON.parse('{"title":"知识回顾-数据的表达1","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/javascript/02.知识回顾-数据的表达.md","filePath":"frontend/javascript/02.知识回顾-数据的表达.md"}'),r={name:"frontend/javascript/02.知识回顾-数据的表达.md"},d=o('<h1 id="知识回顾-数据的表达1" tabindex="-1">知识回顾-数据的表达1 <a class="header-anchor" href="#知识回顾-数据的表达1" aria-label="Permalink to &quot;知识回顾-数据的表达1&quot;">​</a></h1><p>[toc]</p><p>和HTML、CSS不同，JS是一门 <em>命令式编程语言</em>，和其他命令式编程语言一样，它的本质是<strong>处理数据</strong></p><p>JS 提供了三种方式来表达一个数据：</p><ul><li>变量</li><li>字面量</li><li>表达式</li></ul><p>程序中任何需要数据的地方，都可以使用上面任意一种数据表达。</p><h2 id="注意点" tabindex="-1">注意点 <a class="header-anchor" href="#注意点" aria-label="Permalink to &quot;注意点&quot;">​</a></h2><h3 id="标识符" tabindex="-1">标识符 <a class="header-anchor" href="#标识符" aria-label="Permalink to &quot;标识符&quot;">​</a></h3><p>程序中有些可以自行命名的地方，称之为<strong>标识符</strong></p><blockquote><p>常见的标识符有：变量名、函数名、参数名</p></blockquote><p><em>js</em> 的标识符必须符合以下规则：</p><ul><li>允许数字、字母、下划线、$符号</li><li>不得以数字开头</li><li>不能和关键字冲突</li><li>建议使用驼峰命名法</li></ul><p>一个完整的程序中，会涉及成百上千的标识符，好的名称不仅可以减少名称冲突，更有利于程序的阅读和维护。</p><p>名称要做到<strong>望文知意</strong></p><h3 id="转义符" tabindex="-1">转义符 <a class="header-anchor" href="#转义符" aria-label="Permalink to &quot;转义符&quot;">​</a></h3><table><thead><tr><th>转义符</th><th>含义</th></tr></thead><tbody><tr><td><code>\\&#39;</code></td><td>普通英文单引号</td></tr><tr><td><code>\\&quot;</code></td><td>普通英文双引号</td></tr><tr><td><code>\\r</code></td><td>回车</td></tr><tr><td><code>\\n</code></td><td>换行</td></tr></tbody></table><blockquote><p>小技巧：常用<code>\\r\\n</code>表示换行</p></blockquote>',17),l=[d];function i(c,n,s,_,p,h){return e(),a("div",null,l)}const b=t(r,[["render",i]]);export{m as __pageData,b as default};
