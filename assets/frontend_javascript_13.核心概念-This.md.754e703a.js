import{_ as t,o as d,c as o,U as e}from"./chunks/framework.76b79cb5.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/javascript/13.核心概念-This.md","filePath":"frontend/javascript/13.核心概念-This.md"}'),r={name:"frontend/javascript/13.核心概念-This.md"},s=e("<p>不同的场景，<strong>这</strong> 指代的含义不同，JS 中的<strong>this</strong>关键字也是如此：</p><ul><li><p>在全局代码中使用 this，指代全局对象</p><blockquote><p>在真实的开发中，很少在全局代码使用 this</p></blockquote></li><li><p><strong>在函数中使用 this，它的指向完全取决于函数是如何被调用的</strong></p><table><thead><tr><th>调用方式</th><th>示例</th><th>函数中的 this 指向</th></tr></thead><tbody><tr><td><strong>通过 new 调用</strong></td><td><code>new method()</code></td><td>新对象</td></tr><tr><td><strong>直接调用</strong></td><td><code>method()</code></td><td>全局对象</td></tr><tr><td><strong>通过对象调用</strong></td><td><code>obj.method()</code></td><td>前面的对象</td></tr><tr><td><strong>call</strong></td><td><code>method.call(ctx)</code></td><td>call 的第一个参数</td></tr><tr><td><strong>apply</strong></td><td><code>method.apply(ctx)</code></td><td>apply 的第一个参数</td></tr><tr><td></td><td></td><td></td></tr></tbody></table></li></ul>",2),n=[s];function a(c,_,i,h,l,p){return d(),o("div",null,n)}const f=t(r,[["render",a]]);export{m as __pageData,f as default};
